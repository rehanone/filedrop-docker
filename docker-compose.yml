---
version: '3.8'

networks:
  fd-net:
    driver: bridge

services:
  ws:
    container_name: 'filedrop-ws'
    build:
      context: ./filedrop-ws
      dockerfile: Dockerfile
    networks:
      - fd-net
    environment:
      - WS_HOST=0.0.0.0
      - WS_BEHIND_PROXY=yes
      - TURN_MODE=hmac
      - TURN_SERVER=turn:${HOST}
      - TURN_USERNAME=filedrop
      - TURN_SECRET=${TURN_SECRET}
    restart: unless-stopped

  web:
    container_name: 'filedrop-web'
    build:
      context: ./filedrop-web
      dockerfile: Dockerfile
      args:
        - REACT_APP_TITLE=${TITLE}
        - REACT_APP_SERVER=ws://${HOST}:${PORT}/ws/
        - REACT_APP_USE_BROWSER_ROUTER=1
    networks:
      - fd-net
    restart: unless-stopped

  coturn:
    container_name: 'filedrop-coturn'
    image: ghcr.io/coturn/coturn:edge-alpine
    command: --use-auth-secret --static-auth-secret=${TURN_SECRET} --no-tls --no-dtls
    network_mode: host
    restart: unless-stopped

  nginx:
    container_name: 'filedrop-nginx'
    image: nginx:alpine
    networks:
      - fd-net
    # ports:
    #   - "${PORT}:80/tcp"
    volumes:
      - ./conf/nginx:/etc/nginx
    command: /bin/sh -c "nginx -g \"daemon off;\""
    restart: unless-stopped


  proxy:
    image: traefik:v2.8
    container_name: 'filedrop-traefik'
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.${HOST}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.entrypoints=web
#      - traefik.http.routers.traefik.entrypoints=websecure
#      - traefik.http.routers.traefik.tls=true
#      - traefik.http.routers.traefik.middlewares=real-ip-secured
#      - traefik.http.middlewares.real-ip.plugin.traefik-real-ip.excludednets=10.0.0.0/8,172.16.0.0/12,192.168.0.0/18,fc00::/7
#      - traefik.http.middlewares.real-ip-secured.chain.middlewares=real-ip@docker,authelia@docker
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--ping=true"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=true"
      - "--pilot.dashboard=false"
      - "--log=${LOG_ENABLE}"
      - "--log.level=${LOG_LEVEL}"
      - "--log.filepath=/var/log/traefik/traefik.log"
      - "--accesslog=${ACCESS_LOG_ENABLE}"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--accesslog.bufferingsize=1000"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=fd-net"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.web.address=:80/tcp"
#      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
#      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
#      - "--entrypoints.websecure.address=:443/tcp"
#      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/18,fc00::/7"
#      - "--entryPoints.websecure.forwardedHeaders.insecure=false"
#      - "--entryPoints.websecure.proxyProtocol.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/18,fc00::/7"
#      - "--entryPoints.websecure.proxyProtocol.insecure=false"
#      - "--experimental.plugins.traefik-real-ip.modulename=github.com/soulbalz/traefik-real-ip"
#      - "--experimental.plugins.traefik-real-ip.version=v1.0.3"
    networks:
      - fd-net
    environment:
      TZ: Etc/UTC
    volumes:
      - type: bind
        source: /docker-data/traefik/config
        target: /etc/traefik
        read_only: true
      - type: bind
        source: /docker-data/traefik/tls
        target: /tls
        read_only: true
      - type: bind
        source: /docker-data/traefik/log
        target: /var/log/traefik
        read_only: false
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8080:8080/tcp"
    restart: unless-stopped

  whoami:
    image: traefik/whoami
    container_name: 'traefik-whoami'
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.deluge.top`)
      - traefik.http.routers.whoami.entrypoints=web
#      - traefik.http.routers.whoami.tls=true
#      - traefik.http.routers.whoami.middlewares=real-ip-secured
      - traefik.http.services.whoami.loadbalancer.server.scheme=http
      - traefik.http.services.whoami.loadbalancer.server.port=80
    networks:
      - fd-net
    restart: unless-stopped
