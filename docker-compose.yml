---
version: '3.8'

networks:
  fd-net:
    driver: bridge
  backplain:
    external: true

services:
  ws:
    container_name: 'filedrop-ws'
    build:
      context: ./filedrop-ws
      dockerfile: Dockerfile
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.socket-router.rule=Host(`${HOST}`) && PathPrefix(`/ws/`)'
      - 'traefik.http.routers.socket-router.entrypoints=websecure'
      - 'traefik.http.routers.filedrop-web.tls=true'
      - 'traefik.http.routers.filedrop-web.tls.certresolver=le-resolver'
      - 'traefik.http.routers.filedrop-web.middlewares=security-headers@file'
      - 'traefik.http.services.filedrop-ws.loadbalancer.server.port=5000'
      - 'traefik.http.services.filedrop-ws.loadbalancer.sticky.cookie=true'
      - 'traefik.http.services.filedrop-ws.loadbalancer.sticky.cookie.name=io'
      - 'traefik.http.services.filedrop-ws.loadbalancer.sticky.cookie.httponly=true'
      - 'traefik.http.services.filedrop-ws.loadbalancer.sticky.cookie.secure=true'
      - 'traefik.http.services.filedrop-ws.loadbalancer.sticky.cookie.samesite=none'
    networks:
      - fd-net
      - backplain
    environment:
      - WS_HOST=0.0.0.0
      - WS_BEHIND_PROXY=yes
      - TURN_MODE=hmac
      - TURN_SERVER=turn:${HOST}
      - TURN_USERNAME=filedrop
      - TURN_SECRET=${TURN_SECRET}
    restart: unless-stopped

  web:
    container_name: 'filedrop-web'
    build:
      context: ./filedrop-web
      dockerfile: Dockerfile
      args:
        - REACT_APP_TITLE=${TITLE}
        - REACT_APP_SERVER=ws://${HOST}:${PORT}/ws/
        - REACT_APP_USE_BROWSER_ROUTER=1
    labels:
      - traefik.enable=true
      - traefik.http.routers.filedrop-web.rule=Host(`${HOST}`)
      - traefik.http.routers.filedrop-web.entrypoints=websecure
      - traefik.http.routers.filedrop-web.tls=true
      - traefik.http.routers.filedrop-web.tls.certresolver=le-resolver
      - traefik.http.routers.filedrop-web.middlewares=security-headers@file
      - traefik.http.services.filedrop-web.loadbalancer.server.scheme=http
      - traefik.http.services.filedrop-web.loadbalancer.server.port=80
    networks:
      - fd-net
      - backplain
    restart: unless-stopped

  coturn:
    container_name: 'filedrop-coturn'
    image: ghcr.io/coturn/coturn:edge-alpine
    command: --use-auth-secret --static-auth-secret=${TURN_SECRET} --no-tls --no-dtls
    network_mode: host
    restart: unless-stopped

